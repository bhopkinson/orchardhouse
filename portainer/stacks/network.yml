version: '3'

services:
  traefik:
    image: traefik:v2.11
    container_name: "traefik"
    restart: unless-stopped
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.localhost`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=$TRAEFIK_USER_PASS"

  duckdns:
    image: lscr.io/linuxserver/duckdns:latest
    container_name: "duckdns"
    restart: unless-stopped
    environment:
      - SUBDOMAINS=$DUCKDNS_SUBDOMAINS
      - TOKEN=$DUCKDNS_TOKEN

  omada-controller:
    image: mbentley/omada-controller:5.13
    container_name: "omada-controller"
    restart: unless-stopped
    environment:
      - MANAGE_HTTP_PORT=8088
      - MANAGE_HTTPS_PORT=8043
      - PORTAL_HTTP_PORT=8088
      - PORTAL_HTTPS_PORT=8843
      - PORT_APP_DISCOVERY=27001
      - PORT_ADOPT_V1=29812
      - PORT_UPGRADE_V1=29813
      - PORT_MANAGER_V1=29811
      - PORT_MANAGER_V2=29814
      - PORT_DISCOVERY=29810
      - PORT_TRANSFER_V2=29815
      - PORT_RTTY=29816
    ulimits:
      nofile:
        soft: 4096
        hard: 8192
    stop_grace_period: 60s
    ports:
      - "8088:8088"
      - "8043:8043"
      - "8843:8843"
      - "27001:27001/udp"
      - "29810:29810/udp"
      - "29811-29816:29811-29816"
    volumes:
      - omada-data:/opt/tplink/EAPController/data
      - omada-logs:/opt/tplink/EAPController/logs
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`omada.localhost`)"
      - "traefik.http.routers.omada-controller.entrypoints=web"
      - "traefik.http.services.omada-controller.loadbalancer.server.port=8088"

  whoami:
    image: "traefik/whoami"
    container_name: "whoami"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
      - "traefik.http.routers.whoami.entrypoints=web"

volumes:
  omada-data:
  omada-logs: